"use strict";

exports.getAuthenticator = getAuthenticator;

var _OktaVerifyTotp = require("./OktaVerifyTotp");

var _VerificationCodeAuthenticator = require("./VerificationCodeAuthenticator");

var _OktaPassword = require("./OktaPassword");

var _SecurityQuestionEnrollment = require("./SecurityQuestionEnrollment");

var _SecurityQuestionVerification = require("./SecurityQuestionVerification");

var _types = require("../types");

function getAuthenticator(remediation) {
  const {
    relatesTo: {
      value
    } = {}
  } = remediation;

  switch (value.key) {
    case _types.AuthenticatorKey.OKTA_PASSWORD:
      return new _OktaPassword.OktaPassword(value);

    case _types.AuthenticatorKey.SECURITY_QUESTION:
      if (value.contextualData.enrolledQuestion) {
        return new _SecurityQuestionVerification.SecurityQuestionVerification(value);
      } else {
        return new _SecurityQuestionEnrollment.SecurityQuestionEnrollment(value);
      }

    case _types.AuthenticatorKey.OKTA_VERIFY:
      return new _OktaVerifyTotp.OktaVerifyTotp(value);

    default:
      return new _VerificationCodeAuthenticator.VerificationCodeAuthenticator(value);
  }
}
//# sourceMappingURL=getAuthenticator.js.map